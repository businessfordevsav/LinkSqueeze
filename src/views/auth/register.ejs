<!DOCTYPE html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="LinkSqueeze - Create a new account" />
    <meta name="author" content="businessfordevsav" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
    <title>Register - LinkSqueeze</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <style>
      :root {
        --primary: #4f46e5;
        --primary-dark: #4338ca;
        --primary-light: #a5b4fc;
        --secondary: #64748b;
        --background: #f8fafc;
        --card-bg: #ffffff;
        --text: #1e293b;
        --text-light: #64748b;
        --border: #e2e8f0;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --dark: #0f172a;
        --transition-speed: 0.3s;
      }

      [data-theme="dark"] {
        --primary: #818cf8;
        --primary-dark: #6366f1;
        --primary-light: #c7d2fe;
        --secondary: #94a3b8;
        --background: #0f172a;
        --card-bg: #1e293b;
        --text: #f1f5f9;
        --text-light: #cbd5e1;
        --border: #334155;
        --success: #34d399;
        --warning: #fbbf24;
        --danger: #f87171;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Poppins", sans-serif;
        color: var(--text);
        background-color: var(--background);
        line-height: 1.6;
        transition: background-color var(--transition-speed) ease;
        background-image: 
          radial-gradient(at 40% 20%, hsla(240, 69%, 70%, 0.15) 0px, transparent 50%),
          radial-gradient(at 80% 0%, hsla(230, 84%, 60%, 0.1) 0px, transparent 50%),
          radial-gradient(at 0% 50%, hsla(250, 98%, 61%, 0.1) 0px, transparent 50%);
        background-attachment: fixed;
        background-size: cover;
      }

      [data-theme="dark"] body {
        background-image: 
          radial-gradient(at 40% 20%, hsla(240, 69%, 70%, 0.1) 0px, transparent 50%),
          radial-gradient(at 80% 0%, hsla(230, 84%, 60%, 0.05) 0px, transparent 50%),
          radial-gradient(at 0% 50%, hsla(250, 98%, 61%, 0.05) 0px, transparent 50%);
      }

      .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
      }

      .header {
        background-color: rgba(var(--card-bg), 0.6);
        backdrop-filter: blur(10px);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        padding: 1rem 0;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 100;
        transition: background-color var(--transition-speed) ease;
      }

      .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .logo {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--primary);
        text-decoration: none;
        transition: transform 0.3s ease;
      }

      .logo:hover {
        transform: scale(1.05);
      }

      .logo i {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .theme-toggle {
        background: transparent;
        border: none;
        font-size: 1.5rem;
        color: var(--text);
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 50%;
        transition: all var(--transition-speed) ease;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .theme-toggle:hover {
        background-color: rgba(0, 0, 0, 0.1);
        transform: rotate(15deg);
      }

      [data-theme="dark"] .theme-toggle .fa-moon {
        display: none;
      }

      [data-theme="dark"] .theme-toggle .fa-sun {
        display: inline-block;
      }

      [data-theme="light"] .theme-toggle .fa-moon {
        display: inline-block;
      }

      [data-theme="light"] .theme-toggle .fa-sun {
        display: none;
      }

      .auth-section {
        padding: 8rem 0 4rem;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .auth-container {
        display: flex;
        max-width: 900px;
        margin: 0 auto;
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      .auth-image {
        flex: 1;
        background: linear-gradient(135deg, var(--primary-dark), var(--primary));
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        position: relative;
        overflow: hidden;
        display: none;
      }

      .auth-image::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 25%);
        animation: rotate 20s linear infinite;
      }

      @keyframes rotate {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      .auth-image-content {
        position: relative;
        z-index: 1;
        text-align: center;
        color: white;
      }

      .auth-image-content h2 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        font-weight: 700;
      }

      .auth-image-content p {
        font-size: 1.1rem;
        margin-bottom: 2rem;
        font-weight: 300;
        line-height: 1.7;
      }

      .auth-image-logo {
        font-size: 4rem;
        margin-bottom: 2rem;
        color: white;
      }

      .auth-card {
        background-color: var(--card-bg);
        width: 100%;
        max-width: 450px;
        padding: 3rem 2.5rem;
        transition: background-color var(--transition-speed) ease;
      }

      .auth-card h1 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-align: center;
      }

      .auth-subtitle {
        text-align: center;
        color: var(--text-light);
        margin-bottom: 2.5rem;
        font-size: 0.95rem;
      }

      .form-group {
        margin-bottom: 1.5rem;
        position: relative;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        font-size: 0.9rem;
        color: var(--text-light);
      }

      .input-icon-wrapper {
        position: relative;
      }

      .input-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-light);
      }

      .form-group input {
        width: 100%;
        padding: 0.9rem 1rem 0.9rem 2.8rem;
        border: 1px solid var(--border);
        border-radius: 0.5rem;
        font-size: 0.95rem;
        font-family: inherit;
        background-color: var(--card-bg);
        color: var(--text);
        transition: all var(--transition-speed) ease;
      }

      .form-group input:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 3px var(--primary-light);
      }

      .password-toggle {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-light);
        cursor: pointer;
        background: none;
        border: none;
        font-size: 1rem;
      }

      .password-strength {
        display: flex;
        margin-top: 0.5rem;
        gap: 0.25rem;
        height: 4px;
      }

      .password-strength span {
        flex: 1;
        background-color: var(--border);
        border-radius: 2px;
        transition: all 0.3s ease;
      }

      /* Fix for password strength indicators */
      .password-strength-weak span:nth-child(1) {
        background-color: var(--danger);
      }

      .password-strength-medium span:nth-child(1),
      .password-strength-medium span:nth-child(2) {
        background-color: var(--warning);
      }

      .password-strength-strong span:nth-child(1),
      .password-strength-strong span:nth-child(2),
      .password-strength-strong span:nth-child(3) {
        background-color: var(--primary);
      }

      .password-strength-very-strong span {
        background-color: var(--success);
      }

      .password-feedback {
        font-size: 0.75rem;
        color: var(--text-light);
        margin-top: 0.35rem;
      }

      .password-match-indicator {
        display: flex;
        align-items: center;
        gap: 0.35rem;
        font-size: 0.75rem;
        margin-top: 0.35rem;
      }

      .password-match-indicator i {
        font-size: 0.85rem;
      }

      .password-match-indicator.match {
        color: var(--success);
      }

      .password-match-indicator.no-match {
        color: var(--danger);
      }

      .btn {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        width: 100%;
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        font-weight: 600;
        padding: 0.9rem 1.5rem;
        border-radius: 0.5rem;
        font-size: 1rem;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        text-align: center;
        position: relative;
        overflow: hidden;
      }

      .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: all 0.6s ease;
      }

      .btn:hover::before {
        left: 100%;
      }

      .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
      }

      .btn:active {
        transform: translateY(0);
      }

      .terms-agree {
        font-size: 0.85rem;
        text-align: center;
        margin: 1.5rem 0;
        color: var(--text-light);
      }

      .terms-agree a {
        color: var(--primary);
        text-decoration: none;
        font-weight: 500;
        transition: color var(--transition-speed) ease;
      }

      .terms-agree a:hover {
        text-decoration: underline;
        color: var(--primary-dark);
      }

      .social-login {
        display: none;
      }

      .social-login-text, 
      .social-buttons {
        display: none;
      }

      .form-footer {
        margin-top: 2rem;
        text-align: center;
        color: var(--text-light);
        font-size: 0.9rem;
      }

      .form-footer a {
        color: var(--primary);
        text-decoration: none;
        font-weight: 600;
        transition: color var(--transition-speed) ease;
      }

      .form-footer a:hover {
        color: var(--primary-dark);
        text-decoration: underline;
      }

      .error-message {
        background-color: rgba(239, 68, 68, 0.1);
        color: var(--danger);
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1.5rem;
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        border-left: 4px solid var(--danger);
      }

      .error-message i {
        font-size: 1rem;
      }

      .password-suggestions {
        display: none;
      }

      @media (min-width: 768px) {
        .auth-image {
          display: block;
        }

        .auth-container {
          margin: 0 2rem;
        }
      }

      @media (max-width: 768px) {
        .auth-card {
          padding: 2rem 1.5rem;
          max-width: 100%;
          margin: 0 1rem;
          border-radius: 1rem;
          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
      }
    </style>
  </head>
  <body>
    <header class="header">
      <div class="container header-content">
        <a href="/" class="logo">
          <i class="fas fa-link"></i> LinkSqueeze
        </a>
        <button class="theme-toggle" id="themeToggle" aria-label="Toggle dark mode">
          <i class="fas fa-moon"></i>
          <i class="fas fa-sun"></i>
        </button>
      </div>
    </header>

    <section class="auth-section">
      <div class="container">
        <div class="auth-container">
          <div class="auth-image">
            <div class="auth-image-content">
              <div class="auth-image-logo">
                <i class="fas fa-link"></i>
              </div>
              <h2>Join LinkSqueeze</h2>
              <p>Create, track, and analyze your shortened links with powerful analytics</p>
            </div>
          </div>
          <div class="auth-card">
            <h1>Create Account</h1>
            <p class="auth-subtitle">Start your link management journey today</p>
            
            <% if (error) { %>
            <div class="error-message">
              <i class="fas fa-exclamation-circle"></i> <%= error %>
            </div>
            <% } %>
            
            <form action="/register" method="POST" id="registerForm">
              <!-- CSRF token input removed -->
              
              <div class="form-group">
                <label for="name">Full Name</label>
                <div class="input-icon-wrapper">
                  <i class="fas fa-user input-icon"></i>
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    value="<%= locals.user && user.name || '' %>" 
                    placeholder="John Doe" 
                    required
                  />
                </div>
              </div>
              
              <div class="form-group">
                <label for="email">Email Address</label>
                <div class="input-icon-wrapper">
                  <i class="fas fa-envelope input-icon"></i>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    value="<%= locals.user && user.email || '' %>" 
                    placeholder="your@email.com" 
                    required
                  />
                </div>
              </div>
              
              <div class="form-group">
                <label for="password">Password</label>
                <div class="input-icon-wrapper">
                  <i class="fas fa-lock input-icon"></i>
                  <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    placeholder="Create a strong password" 
                    required
                    minlength="8"
                  />
                  <button type="button" class="password-toggle" id="togglePassword">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="password-strength">
                  <span></span>
                  <span></span>
                  <span></span>
                  <span></span>
                </div>
                <div class="password-feedback" id="passwordFeedback">Password must be at least 8 characters</div>
              </div>
              
              <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <div class="input-icon-wrapper">
                  <i class="fas fa-lock input-icon"></i>
                  <input 
                    type="password" 
                    id="confirmPassword" 
                    name="confirmPassword" 
                    placeholder="Confirm your password" 
                    required
                    minlength="8"
                  />
                </div>
                <div class="password-match-indicator" id="passwordMatch"></div>
              </div>
              
              <button type="submit" class="btn" id="createAccountBtn">
                <i class="fas fa-user-plus"></i> Create Account
              </button>
              
              <div class="terms-agree">
                By creating an account, you agree to our <a href="/terms-of-service">Terms of Service</a> and <a href="/privacy-policy">Privacy Policy</a>
              </div>
            </form>
            
            <div class="form-footer">
              Already have an account? <a href="/login">Sign In</a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <script>
      // Initialize theme from local storage or system preference
      function initTheme() {
        const savedTheme = localStorage.getItem("theme");

        if (savedTheme) {
          document.documentElement.setAttribute("data-theme", savedTheme);
        } else if (
          window.matchMedia &&
          window.matchMedia("(prefers-color-scheme: dark)").matches
        ) {
          document.documentElement.setAttribute("data-theme", "dark");
        }
      }

      // Toggle theme between light and dark
      function toggleTheme() {
        const currentTheme =
          document.documentElement.getAttribute("data-theme") || "light";
        const newTheme = currentTheme === "light" ? "dark" : "light";

        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);
      }

      // Initialize theme
      initTheme();

      // Theme toggle button event listener
      document
        .getElementById("themeToggle")
        .addEventListener("click", toggleTheme);

      // Password visibility toggle
      const togglePassword = document.getElementById('togglePassword');
      const passwordInput = document.getElementById('password');
      
      togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        // Change the eye icon
        const eyeIcon = this.querySelector('i');
        eyeIcon.classList.toggle('fa-eye');
        eyeIcon.classList.toggle('fa-eye-slash');
      });
      
      // Password strength meter - improved implementation
      const passwordStrength = document.querySelector('.password-strength');
      const passwordFeedback = document.getElementById('passwordFeedback');
      
      // Password input validation
      passwordInput.addEventListener('input', function() {
        const password = this.value;
        
        // Reset classes
        passwordStrength.className = 'password-strength';
        
        // Update password strength indicator
        if (password.length > 0) {
          // Check for minimum length first
          if (password.length < 8) {
            // Very weak password (less than minimum)
            passwordStrength.classList.add('password-strength-weak');
            passwordFeedback.textContent = 'Password too short';
            passwordFeedback.style.color = 'var(--danger)';
          } else {
            // Password meets minimum length, check strength
            const strength = checkPasswordStrength(password);
            
            if (strength === 1) {
              passwordStrength.classList.add('password-strength-weak');
              passwordFeedback.textContent = 'Weak password';
              passwordFeedback.style.color = 'var(--danger)';
            } else if (strength === 2) {
              passwordStrength.classList.add('password-strength-medium');
              passwordFeedback.textContent = 'Medium password';
              passwordFeedback.style.color = 'var(--warning)';
            } else if (strength === 3) {
              passwordStrength.classList.add('password-strength-strong');
              passwordFeedback.textContent = 'Strong password';
              passwordFeedback.style.color = 'var(--primary)';
            } else if (strength === 4) {
              passwordStrength.classList.add('password-strength-very-strong');
              passwordFeedback.textContent = 'Very strong password';
              passwordFeedback.style.color = 'var(--success)';
            }
          }
        } else {
          passwordFeedback.textContent = 'Password must be at least 8 characters';
          passwordFeedback.style.color = 'var(--text-light)';
        }
        
        // Check if passwords match
        checkPasswordsMatch();
      });
      
      // Function to check password strength - improved
      function checkPasswordStrength(password) {
        let strength = 0;
        
        // Empty password
        if (password.length === 0) {
          return strength;
        }
        
        // Length check is already done in the calling function
        // Just add 1 for meeting minimum length
        strength += 1;
        
        // Check for mixed case
        if (/[a-z]/.test(password) && /[A-Z]/.test(password)) {
          strength += 1;
        }
        
        // Check for numbers
        if (/\d/.test(password)) {
          strength += 1;
        }
        
        // Check for special characters
        if (/[^a-zA-Z0-9]/.test(password)) {
          strength += 1;
        }
        
        return strength;
      }
      
      // Check if passwords match
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const passwordMatch = document.getElementById('passwordMatch');
      
      confirmPasswordInput.addEventListener('input', checkPasswordsMatch);
      
      function checkPasswordsMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (confirmPassword.length > 0) {
          if (password === confirmPassword) {
            passwordMatch.classList.add('match');
            passwordMatch.classList.remove('no-match');
            passwordMatch.innerHTML = '<i class="fas fa-check-circle"></i> Passwords match';
          } else {
            passwordMatch.classList.add('no-match');
            passwordMatch.classList.remove('match');
            passwordMatch.innerHTML = '<i class="fas fa-times-circle"></i> Passwords do not match';
          }
        } else {
          passwordMatch.innerHTML = '';
        }
      }
      
      // Form submission validation
      document.getElementById('registerForm').addEventListener('submit', function(e) {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (password !== confirmPassword) {
          e.preventDefault();
          passwordMatch.classList.add('no-match');
          passwordMatch.classList.remove('match');
          passwordMatch.innerHTML = '<i class="fas fa-times-circle"></i> Passwords do not match';
          
          // Scroll to password field
          confirmPasswordInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      });
    </script>
  </body>
</html>